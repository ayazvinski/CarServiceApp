# Application Locale and Database Configuration
spring.web.locale=pl_PL
spring.datasource.url=jdbc:mysql://localhost:3306/CarServiceApp
spring.datasource.username=root
spring.datasource.password=coderslab
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2.client=DEBUG

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=638885692692-5k49qqphrb0acql3pp06ncgnb2j4vi3e.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.provider=google
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/calendar
spring.security.oauth2.client.registration.google.redirect-uri=https://localhost:8443/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-authentication-method=basic
spring.security.oauth2.client.registration.google.access-type=offline  # For obtaining refresh token

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v1/certs

# Server Configuration
server.port=8443
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=changeit
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=springboot


